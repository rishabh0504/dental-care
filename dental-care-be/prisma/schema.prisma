datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator py {
  provider             = "prisma-client-py"
  recursive_type_depth = 5
}

model User {
  id          Int      @id @default(autoincrement())
  firstName   String
  lastName    String
  email       String   @unique
  dateOfBirth DateTime
  password    String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  chatSession ChatSession? // back relation to ChatSession (optional)
}

model ChatSession {
  id        Int      @id @default(autoincrement())
  title     String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  createdBy String?
  updatedBy String?

  user   User @relation(fields: [userId], references: [id])
  userId Int  @unique

  chatHistory ChatHistory[]
}

model ChatHistory {
  id        Int      @id @default(autoincrement())
  role      Role
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  createdBy String?
  updatedBy String?

  session   ChatSession @relation(fields: [sessionId], references: [id], onDelete: Cascade)
  sessionId Int
}

enum PatientStatus {
  ACTIVE
  INACTIVE
}

model Patient {
  id        Int           @id @default(autoincrement())
  name      String
  age       Int
  email     String        @unique
  phone     String
  address   String
  status    PatientStatus
  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt
}

enum Role {
  user
  assistant
  system
}
